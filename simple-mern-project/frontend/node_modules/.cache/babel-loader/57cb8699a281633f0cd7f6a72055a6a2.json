{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yuall/Desktop/Coding/Projects/Udemy/MERNStack/simple-mern-project/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\nfunction App() {\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n      const responseData = await response.json();\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n    fetchProducts();\n  }, []);\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n      };\n\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        hasError = true;\n      }\n      const responseData = await response.json();\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NewProduct, {\n    onAddProduct: addProductHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), !isLoading && /*#__PURE__*/React.createElement(ProductList, {\n    items: loadedProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Header","NewProduct","ProductList","App","loadedProducts","setLoadedProducts","isLoading","setIsLoading","fetchProducts","response","fetch","responseData","json","products","addProductHandler","productName","productPrice","newProduct","title","price","hasError","method","body","JSON","stringify","headers","ok","Error","message","prevProducts","concat","id","product","error","alert","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAddProduct","className","items"],"sources":["/mnt/c/Users/yuall/Desktop/Coding/Projects/Udemy/MERNStack/simple-mern-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\n\nfunction App() {\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n\n      const responseData = await response.json();\n\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n\n    fetchProducts();\n  }, []);\n\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n      };\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        hasError = true;\n      }\n\n      const responseData = await response.json();\n\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main>\n        <NewProduct onAddProduct={addProductHandler} />\n        {isLoading && <p className=\"loader\">Loading...</p>}\n        {!isLoading && <ProductList items={loadedProducts} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCD,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAE9D,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAE1CP,iBAAiB,CAACM,YAAY,CAACE,QAAQ,CAAC;MACxCN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,YAAY,KAAK;IAC7D,IAAI;MACF,MAAMC,UAAU,GAAG;QACjBC,KAAK,EAAEH,WAAW;QAClBI,KAAK,EAAE,CAACH,YAAY,CAAC;MACvB,CAAC;;MACD,IAAII,QAAQ,GAAG,KAAK;MACpB,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DW,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU,CAAC;QAChCQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACiB,EAAE,EAAE;QAChBN,QAAQ,GAAG,IAAI;MACjB;MAEA,MAAMT,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAE1C,IAAIQ,QAAQ,EAAE;QACZ,MAAM,IAAIO,KAAK,CAAChB,YAAY,CAACiB,OAAO,CAAC;MACvC;MAEAvB,iBAAiB,CAACwB,YAAY,IAAI;QAChC,OAAOA,YAAY,CAACC,MAAM,CAAC;UACzB,GAAGb,UAAU;UACbc,EAAE,EAAEpB,YAAY,CAACqB,OAAO,CAACD;QAC3B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAACL,OAAO,IAAI,uBAAuB,CAAC;IACjD;EACF,CAAC;EAED,oBACE/B,KAAA,CAAAsC,aAAA,CAACtC,KAAK,CAACuC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACb7C,KAAA,CAAAsC,aAAA,CAACnC,MAAM;IAAAqC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACV7C,KAAA,CAAAsC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7C,KAAA,CAAAsC,aAAA,CAAClC,UAAU;IAAC0C,YAAY,EAAE7B,iBAAkB;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC9CpC,SAAS,iBAAIT,KAAA,CAAAsC,aAAA;IAAGS,SAAS,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAa,CAAC,EACjD,CAACpC,SAAS,iBAAIT,KAAA,CAAAsC,aAAA,CAACjC,WAAW;IAAC2C,KAAK,EAAEzC,cAAe;IAAAiC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChD,CACQ,CAAC;AAErB;AAEA,eAAevC,GAAG"},"metadata":{},"sourceType":"module"}